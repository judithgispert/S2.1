-- MySQL Script generated by MySQL Workbench
-- Tue Nov 14 10:03:55 2023
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema youtube
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema youtube
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `youtube` DEFAULT CHARACTER SET utf8 ;
USE `youtube` ;

-- -----------------------------------------------------
-- Table `youtube`.`address`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `youtube`.`address` ;

CREATE TABLE IF NOT EXISTS `youtube`.`address` (
  `id_address` INT NOT NULL AUTO_INCREMENT,
  `city` VARCHAR(45) NOT NULL,
  `postal_code` INT NOT NULL,
  PRIMARY KEY (`id_address`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `youtube`.`user`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `youtube`.`user` ;

CREATE TABLE IF NOT EXISTS `youtube`.`user` (
  `id_user` INT NOT NULL AUTO_INCREMENT,
  `user_email` VARCHAR(45) NOT NULL,
  `username` VARCHAR(45) NOT NULL,
  `birthdate` DATE NOT NULL,
  `user_gender` VARCHAR(45) NOT NULL,
  `address_id_address` INT NOT NULL,
  PRIMARY KEY (`id_user`),
  CONSTRAINT `fk_user_address`
    FOREIGN KEY (`address_id_address`)
    REFERENCES `youtube`.`address` (`id_address`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE UNIQUE INDEX `email_UNIQUE` ON `youtube`.`user` (`user_email` ASC) VISIBLE;

CREATE UNIQUE INDEX `username_UNIQUE` ON `youtube`.`user` (`username` ASC) VISIBLE;

CREATE INDEX `fk_user_address_idx` ON `youtube`.`user` (`address_id_address` ASC) VISIBLE;

CREATE UNIQUE INDEX `id_user_UNIQUE` ON `youtube`.`user` (`id_user` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `youtube`.`video`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `youtube`.`video` ;

CREATE TABLE IF NOT EXISTS `youtube`.`video` (
  `id_video` INT NOT NULL AUTO_INCREMENT,
  `video_title` VARCHAR(45) NOT NULL,
  `video_description` VARCHAR(245) NOT NULL,
  `video_size` INT NOT NULL,
  `video_fileName` VARCHAR(45) NOT NULL,
  `video_duration` DECIMAL(10,2) NOT NULL,
  `video_thumbnail` VARCHAR(245) NOT NULL,
  `video_reproductions` INT NOT NULL,
  `video_likes` INT NOT NULL,
  `video_dislikes` INT NOT NULL,
  `video_state` ENUM('Public', 'Private', 'Hidden') NOT NULL,
  `video_datePublication` DATETIME NOT NULL,
  `user_id_user` INT NOT NULL,
  PRIMARY KEY (`id_video`),
  CONSTRAINT `fk_video_user1`
    FOREIGN KEY (`user_id_user`)
    REFERENCES `youtube`.`user` (`id_user`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE UNIQUE INDEX `id_video_UNIQUE` ON `youtube`.`video` (`id_video` ASC) VISIBLE;

CREATE INDEX `fk_video_user1_idx` ON `youtube`.`video` (`user_id_user` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `youtube`.`tag`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `youtube`.`tag` ;

CREATE TABLE IF NOT EXISTS `youtube`.`tag` (
  `id_tag` INT NOT NULL AUTO_INCREMENT,
  `tag_name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id_tag`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `youtube`.`video_has_tag`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `youtube`.`video_has_tag` ;

CREATE TABLE IF NOT EXISTS `youtube`.`video_has_tag` (
  `video_id_video` INT NOT NULL,
  `tag_id_tag` INT NOT NULL,
  PRIMARY KEY (`video_id_video`, `tag_id_tag`),
  CONSTRAINT `fk_video_has_tag_video1`
    FOREIGN KEY (`video_id_video`)
    REFERENCES `youtube`.`video` (`id_video`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_video_has_tag_tag1`
    FOREIGN KEY (`tag_id_tag`)
    REFERENCES `youtube`.`tag` (`id_tag`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_video_has_tag_tag1_idx` ON `youtube`.`video_has_tag` (`tag_id_tag` ASC) VISIBLE;

CREATE INDEX `fk_video_has_tag_video1_idx` ON `youtube`.`video_has_tag` (`video_id_video` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `youtube`.`channel`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `youtube`.`channel` ;

CREATE TABLE IF NOT EXISTS `youtube`.`channel` (
  `id_channel` INT NOT NULL AUTO_INCREMENT,
  `channel_name` VARCHAR(45) NOT NULL,
  `channel_description` VARCHAR(245) NOT NULL,
  `channel_dateCreation` DATETIME NOT NULL,
  PRIMARY KEY (`id_channel`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `youtube`.`user_subscription`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `youtube`.`user_subscription` ;

CREATE TABLE IF NOT EXISTS `youtube`.`user_subscription` (
  `user_id_user` INT NOT NULL,
  `channel_id_channel` INT NOT NULL,
  PRIMARY KEY (`user_id_user`, `channel_id_channel`),
  CONSTRAINT `fk_user_has_channel_user1`
    FOREIGN KEY (`user_id_user`)
    REFERENCES `youtube`.`user` (`id_user`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_user_has_channel_channel1`
    FOREIGN KEY (`channel_id_channel`)
    REFERENCES `youtube`.`channel` (`id_channel`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_user_has_channel_channel1_idx` ON `youtube`.`user_subscription` (`channel_id_channel` ASC) VISIBLE;

CREATE INDEX `fk_user_has_channel_user1_idx` ON `youtube`.`user_subscription` (`user_id_user` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `youtube`.`video_reaction`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `youtube`.`video_reaction` ;

CREATE TABLE IF NOT EXISTS `youtube`.`video_reaction` (
  `id_video_reaction` INT NOT NULL,
  `video_reaction_state` ENUM('Like', 'Dislike') NOT NULL,
  `video_reaction_date` DATETIME NOT NULL,
  `user_id_user` INT NOT NULL,
  `video_id_video` INT NOT NULL,
  PRIMARY KEY (`id_video_reaction`),
  CONSTRAINT `fk_video_reaction_user1`
    FOREIGN KEY (`user_id_user`)
    REFERENCES `youtube`.`user` (`id_user`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_video_reaction_video1`
    FOREIGN KEY (`video_id_video`)
    REFERENCES `youtube`.`video` (`id_video`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_video_reaction_user1_idx` ON `youtube`.`video_reaction` (`user_id_user` ASC) VISIBLE;

CREATE INDEX `fk_video_reaction_video1_idx` ON `youtube`.`video_reaction` (`video_id_video` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `youtube`.`playlist`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `youtube`.`playlist` ;

CREATE TABLE IF NOT EXISTS `youtube`.`playlist` (
  `id_playlist` INT NOT NULL AUTO_INCREMENT,
  `playlist_name` VARCHAR(45) NOT NULL,
  `playlist_dateCreation` DATETIME NOT NULL,
  `playlist_state` ENUM('Public', 'Private') NOT NULL,
  `user_id_user` INT NOT NULL,
  PRIMARY KEY (`id_playlist`),
  CONSTRAINT `fk_playlist_user1`
    FOREIGN KEY (`user_id_user`)
    REFERENCES `youtube`.`user` (`id_user`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_playlist_user1_idx` ON `youtube`.`playlist` (`user_id_user` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `youtube`.`comment`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `youtube`.`comment` ;

CREATE TABLE IF NOT EXISTS `youtube`.`comment` (
  `id_comment` INT NOT NULL AUTO_INCREMENT,
  `comment_description` VARCHAR(245) NOT NULL,
  `comment_date` DATETIME NOT NULL,
  `user_id_user` INT NOT NULL,
  `video_id_video` INT NOT NULL,
  PRIMARY KEY (`id_comment`),
  CONSTRAINT `fk_comment_user1`
    FOREIGN KEY (`user_id_user`)
    REFERENCES `youtube`.`user` (`id_user`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_comment_video1`
    FOREIGN KEY (`video_id_video`)
    REFERENCES `youtube`.`video` (`id_video`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_comment_user1_idx` ON `youtube`.`comment` (`user_id_user` ASC) VISIBLE;

CREATE INDEX `fk_comment_video1_idx` ON `youtube`.`comment` (`video_id_video` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `youtube`.`comment_reaction`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `youtube`.`comment_reaction` ;

CREATE TABLE IF NOT EXISTS `youtube`.`comment_reaction` (
  `id_comment_reaction` INT NOT NULL AUTO_INCREMENT,
  `commentReactioncol` ENUM('Like', 'Dislike') NOT NULL,
  `comment_reaction_date` DATETIME NOT NULL,
  `user_id_user` INT NOT NULL,
  `comment_id_comment` INT NOT NULL,
  PRIMARY KEY (`id_comment_reaction`),
  CONSTRAINT `fk_comment_reaction_user1`
    FOREIGN KEY (`user_id_user`)
    REFERENCES `youtube`.`user` (`id_user`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_comment_reaction_comment1`
    FOREIGN KEY (`comment_id_comment`)
    REFERENCES `youtube`.`comment` (`id_comment`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_comment_reaction_user1_idx` ON `youtube`.`comment_reaction` (`user_id_user` ASC) VISIBLE;

CREATE INDEX `fk_comment_reaction_comment1_idx` ON `youtube`.`comment_reaction` (`comment_id_comment` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `youtube`.`playlist_has_video`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `youtube`.`playlist_has_video` ;

CREATE TABLE IF NOT EXISTS `youtube`.`playlist_has_video` (
  `playlist_id_playlist` INT NOT NULL,
  `video_id_video` INT NOT NULL,
  PRIMARY KEY (`playlist_id_playlist`, `video_id_video`),
  CONSTRAINT `fk_playlist_has_video_playlist1`
    FOREIGN KEY (`playlist_id_playlist`)
    REFERENCES `youtube`.`playlist` (`id_playlist`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_playlist_has_video_video1`
    FOREIGN KEY (`video_id_video`)
    REFERENCES `youtube`.`video` (`id_video`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_playlist_has_video_video1_idx` ON `youtube`.`playlist_has_video` (`video_id_video` ASC) VISIBLE;

CREATE INDEX `fk_playlist_has_video_playlist1_idx` ON `youtube`.`playlist_has_video` (`playlist_id_playlist` ASC) VISIBLE;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
